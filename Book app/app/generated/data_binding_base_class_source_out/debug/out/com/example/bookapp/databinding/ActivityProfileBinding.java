// Generated by view binder compiler. Do not edit!
package com.example.bookapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bookapp.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView accountTypeTv;

  @NonNull
  public final ImageButton backBtn;

  @NonNull
  public final RecyclerView booksRv;

  @NonNull
  public final LinearLayout detailsLl;

  @NonNull
  public final TextView emailTv;

  @NonNull
  public final TextView favoriteBookCountTv;

  @NonNull
  public final TextView favoriteBooksLabelTv;

  @NonNull
  public final TextView memberDateTv;

  @NonNull
  public final TextView nameTv;

  @NonNull
  public final ImageButton profileEditBtn;

  @NonNull
  public final ShapeableImageView profileIv;

  @NonNull
  public final TextView titleTv;

  @NonNull
  public final RelativeLayout toolbarRl;

  @NonNull
  public final View view1;

  private ActivityProfileBinding(@NonNull RelativeLayout rootView, @NonNull TextView accountTypeTv,
      @NonNull ImageButton backBtn, @NonNull RecyclerView booksRv, @NonNull LinearLayout detailsLl,
      @NonNull TextView emailTv, @NonNull TextView favoriteBookCountTv,
      @NonNull TextView favoriteBooksLabelTv, @NonNull TextView memberDateTv,
      @NonNull TextView nameTv, @NonNull ImageButton profileEditBtn,
      @NonNull ShapeableImageView profileIv, @NonNull TextView titleTv,
      @NonNull RelativeLayout toolbarRl, @NonNull View view1) {
    this.rootView = rootView;
    this.accountTypeTv = accountTypeTv;
    this.backBtn = backBtn;
    this.booksRv = booksRv;
    this.detailsLl = detailsLl;
    this.emailTv = emailTv;
    this.favoriteBookCountTv = favoriteBookCountTv;
    this.favoriteBooksLabelTv = favoriteBooksLabelTv;
    this.memberDateTv = memberDateTv;
    this.nameTv = nameTv;
    this.profileEditBtn = profileEditBtn;
    this.profileIv = profileIv;
    this.titleTv = titleTv;
    this.toolbarRl = toolbarRl;
    this.view1 = view1;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accountTypeTv;
      TextView accountTypeTv = ViewBindings.findChildViewById(rootView, id);
      if (accountTypeTv == null) {
        break missingId;
      }

      id = R.id.backBtn;
      ImageButton backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.booksRv;
      RecyclerView booksRv = ViewBindings.findChildViewById(rootView, id);
      if (booksRv == null) {
        break missingId;
      }

      id = R.id.detailsLl;
      LinearLayout detailsLl = ViewBindings.findChildViewById(rootView, id);
      if (detailsLl == null) {
        break missingId;
      }

      id = R.id.emailTv;
      TextView emailTv = ViewBindings.findChildViewById(rootView, id);
      if (emailTv == null) {
        break missingId;
      }

      id = R.id.favoriteBookCountTv;
      TextView favoriteBookCountTv = ViewBindings.findChildViewById(rootView, id);
      if (favoriteBookCountTv == null) {
        break missingId;
      }

      id = R.id.favoriteBooksLabelTv;
      TextView favoriteBooksLabelTv = ViewBindings.findChildViewById(rootView, id);
      if (favoriteBooksLabelTv == null) {
        break missingId;
      }

      id = R.id.memberDateTv;
      TextView memberDateTv = ViewBindings.findChildViewById(rootView, id);
      if (memberDateTv == null) {
        break missingId;
      }

      id = R.id.nameTv;
      TextView nameTv = ViewBindings.findChildViewById(rootView, id);
      if (nameTv == null) {
        break missingId;
      }

      id = R.id.profileEditBtn;
      ImageButton profileEditBtn = ViewBindings.findChildViewById(rootView, id);
      if (profileEditBtn == null) {
        break missingId;
      }

      id = R.id.profileIv;
      ShapeableImageView profileIv = ViewBindings.findChildViewById(rootView, id);
      if (profileIv == null) {
        break missingId;
      }

      id = R.id.titleTv;
      TextView titleTv = ViewBindings.findChildViewById(rootView, id);
      if (titleTv == null) {
        break missingId;
      }

      id = R.id.toolbarRl;
      RelativeLayout toolbarRl = ViewBindings.findChildViewById(rootView, id);
      if (toolbarRl == null) {
        break missingId;
      }

      id = R.id.view1;
      View view1 = ViewBindings.findChildViewById(rootView, id);
      if (view1 == null) {
        break missingId;
      }

      return new ActivityProfileBinding((RelativeLayout) rootView, accountTypeTv, backBtn, booksRv,
          detailsLl, emailTv, favoriteBookCountTv, favoriteBooksLabelTv, memberDateTv, nameTv,
          profileEditBtn, profileIv, titleTv, toolbarRl, view1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
